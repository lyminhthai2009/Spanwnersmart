plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'github.nighter'
    version = '1.5.4'

    repositories {
        mavenCentral()
        maven { name = "papermc-repo"; url = "https://repo.papermc.io/repository/maven-public/" }
        maven { name = "sonatype-public"; url = "https://oss.sonatype.org/content/groups/public/" }
        maven { name = "opencollabRepositoryMain"; url = "https://repo.opencollab.dev/main" }
        maven { name = "jitpack"; url = "https://jitpack.io" }
        maven { name = "enginehub"; url = "https://maven.enginehub.org/repo/" }
        maven { name = "glaremasters repo"; url = "https://repo.glaremasters.me/repository/towny/" }
        maven { name = "bg-repo"; url = "https://repo.bg-software.com/repository/api/" }
        maven { name = "codemc"; url = "https://repo.codemc.io/repository/bentoboxworld/" }
        maven { name = "nightexpress-releases"; url = "https://repo.nightexpressdev.com/releases"}
        maven { name = "minecodes-repository-releases"; url = "https://repository.minecodes.pl/releases"}
        maven { name = "Lumine Releases"; url = 'https://mvn.lumine.io/repository/maven-public/' }
        maven { name = "iridiumdevelopment"; url = "https://nexus.iridiumdevelopment.net/repository/maven-releases/" }
    }
}

subprojects {
    apply plugin: 'java-library'

    java {
        withJavadocJar()
        withSourcesJar()
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}